<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>dmg</groupId>
  <artifactId>dmg-master</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>dmg-master</name>
  <!-- dmg数据中台的缩写 -->
  <description>dmg=DataMiddleGround </description>

    <parent> 
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    
     <!-- 进行聚合的子项目 --> 
     <modules>
	  <module>dmg-eureka</module>
	  <module>dmg-zuul</module>
      <module>dmg-ribbon</module>
      
     <!-- <module>dmg-interface-manage</module>-->
      
      <!-- 中台用户服务子系统 -->
      <module>dmg-user-server</module>
      
      
      <!-- 中台数据接入子系统 -->
      <module>dmg-data-access</module>
      <!-- 中台数据存储管理子系统 -->
      <module>dmg-store-manage</module>     
  
      
      <!-- 中台计算子系统 -->
      <module>dmg-count</module>     
      <!-- 人工智能ai子系统 -->
      <module>dmg-ai</module>
       
       
      <!-- 任务调度子系统 -->
      <module>dmg-task-schedule</module>         
      <!-- 中台大数据平台管理 -->
      <module>dmg-plat-manage</module>
	  
	
     </modules>
      
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        
        <commons-fileupload.version>1.2.2</commons-fileupload.version>
        <commons-lang3.version>3.3.1</commons-lang3.version>
        <commons-io.version>2.4</commons-io.version>
        <httpclient.version>4.5.3</httpclient.version>
        <commons-collections.version>3.2.2</commons-collections.version>
        <fastjson.version>1.2.83</fastjson.version>
        <mybatis.version>3.4.1</mybatis.version>
        <mybatis-spring.version>1.3.0</mybatis-spring.version>
        <druid.version>1.0.24</druid.version>
        <activiti.version>5.21.0</activiti.version>
        <cxf.version>3.0.0</cxf.version>
        <cxf-rt.version>3.1.6</cxf-rt.version>
        <oracle.version>7</oracle.version>
        <fasterxml.uuid.version>3.1.4</fasterxml.uuid.version>
        <github.miemiedev.version>1.2.17</github.miemiedev.version>
        <common.codec.version>1.10</common.codec.version>
        <servlet-api.version>3.1.0</servlet-api.version> 
        <kaptcha.version>2.3.2</kaptcha.version>
        <org.codehaus.jackson.version>1.9.13</org.codehaus.jackson.version>
        <commons-beanutils.version>1.9.3</commons-beanutils.version>
    </properties> 
    
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>           
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>       
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope> 
        </dependency>                   
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons-fileupload.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${commons-collections.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${common.codec.version}</version> 
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>${commons-beanutils.version}</version> 
        </dependency>
        <dependency>
		    <groupId>org.apache.httpcomponents</groupId>
		    <artifactId>httpclient</artifactId>
		    <version>${httpclient.version}</version>
		</dependency>             
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>    
        <!--对json格式的支持 -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${org.codehaus.jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>   
        <dependency>
            <groupId>com.fasterxml.uuid</groupId>
            <artifactId>java-uuid-generator</artifactId>
            <version>${fasterxml.uuid.version}</version>
        </dependency>       
    </dependencies>


    <!-- profile 配置切换: mvn clean install -P dev/prod/local -->
    <profiles>
       <profile>
          <id>dev</id>
          <activation>
             <activeByDefault>true</activeByDefault>
          </activation>
          <dependencies>
             <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-undertow</artifactId>
             </dependency>
          </dependencies>         
          <properties>
             <spring.profiles.active>dev</spring.profiles.active>
          </properties> 
       </profile>
    
       <profile>
          <id>prod</id>
          <dependencies>
             <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-undertow</artifactId>
             </dependency>
          </dependencies>
          <properties>
             <spring.profiles.active>prod</spring.profiles.active>
          </properties>
       </profile>
       
       <profile>
          <id>local</id>
          <dependencies>
             <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-undertow</artifactId>
             </dependency>
          </dependencies>
          <properties>
             <spring.profiles.active>local</spring.profiles.active>
          </properties>
       </profile>
    </profiles>

    <build>
        <finalName>dmg-master</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
            </plugin>           
            <!-- 解解决maven update project 后版本降低为1.5的bug -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            
            <!-- MAVEN打包时动态切换: mvn clean package -P prod/dev/local -->
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-resources-plugin</artifactId>
               <executions>
                  <execution>
                     <id>default-resources</id>
                     <phase>validate</phase>
                     <goals>
                        <goal>copy-resources</goal>
                     </goals>
                     <configuration>
                        <outputDirectory>target/classes</outputDirectory>
                        <useDefaultDelimiters>false</useDefaultDelimiters>
                        <delimiters>
                           <delimiter>$</delimiter>
                        </delimiters>
                        <resources>
                           <!-- 打包时包含properties、xml --> 
                           <resource>  
                              <directory>src/main/java</directory>  
                              <includes>  
                                  <include>**/*.properties</include>  
                                  <include>**/*.xml</include>  
                              </includes>  
                              <!-- 是否替换资源中的属性-->  
                              <filtering>true</filtering>  
                           </resource>                          
                           <resource>
                              <directory>src/main/resources/</directory>
                              <filtering>true</filtering>
                              <includes>
                                 <include>**/*.xml</include>
                                 <include>**/*.yml</include>
                                 <include>**/*.properties</include>  
                              </includes>
                           </resource>
                           <resource>
                              <directory>src/main/resources/</directory>
                              <filtering>false</filtering>
                              <excludes>
                                 <exclude>**/*.xml</exclude>
                                 <exclude>**/*.yml</exclude>
                                 <include>**/*.properties</include>  
                              </excludes>
                           </resource>
                        </resources>
                     </configuration>
                  </execution>
               </executions>
            </plugin>               
            <!-- 单元测试 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                    <includes>
                        <include>**/*Test*.java</include>
                    </includes>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <!-- 绑定到特定的生命周期之后，运行maven-source-pluin 运行目标为jar-no-fork -->
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>   
        </plugins>    
    </build>    
</project>